#+TODO: VIEW TODO OPEN | WATCHED DONE CANCELED

ACTION

* TODO list
** Soil Test App : Design Recipe
** FreeCodeCamp : React Recipe Box
** Unfinished Videos!!!!!!!!!!!!!!!!!!!!!
*** Webpack Fundamentals
*** Udemy : Modern React with Redux
*** React Fundamentals (Egghead)


* queue
** Notes
*** Books
**** JavaScript Allonge : Review and Refactor Portfolio
*** CMS
**** Pluralsight
***** Intro to WordPress : Chris Reynolds (1:22)
***** Static Websites with Jekyll : Ryan Irelan (1:04)
***** Designing Custom Sites in WordPress : Jay Boucher (2:00)
*** D3
**** Pluralsight
***** Interactive Data Visualization with D3.js : Ian Johnson (5:30)
***** D3.js Data Visualization Fundamentals : Ben Sullins (4:35)
***** Geospatial mapping with D3 : Ben Sullins (2:39)
*** JS
**** Pluralsight
***** WATCHED Advanced Javascript : Kyle Simpson ()
***** WATCHED JS Objects and Prototypes
***** WATCHED JS Best Practices : Jonathan Mills (2:39)
***** WATCHED JS.Next: ES6 : Aaron Frost (5:24)
***** OPEN jQuery-free JS : Elijah Manor (2:26)
***** WEbRTC FUndamentals : Lisa Larson-Kelly (1:40)
***** JavaScript Design Patterns : Aaron Powell (2:02)
***** JS Templating w/ Handlebars: Ryan Lewis (2:19)
***** Hardcore Functional Programming in JavaScript : Brian Lonsdorf (6:03)
***** JS Module Fundamentals : (2:16)
***** Front-End First: Testing and Prototyping JS Apps : Mark Zamoyta (2:27)
***** Reasoning About Async JS : Wes Higbee (2:05)
**** Egghead
***** Asynchronous Programming: The End of the Loop : Jafar Husain
***** Regex in JavaScript : Joe Maddalone
***** JavaScript Arrays in Depth : Shane Osbourne
***** Learn how to use Immutable JS : J.S. Leonard
**** Udemy
***** DONE JavaScript: Understanding The Weird Parts : Anthony Alicea
***** Hardcore Functional Programming in JavaScript : Brian Lonsdorf (6:00)
**** FrontEndMasters
***** Functional-Lite JS : Kyle Simpson (3:10)
***** Rethinking Async JS : Kyle Simpson (6:22)
***** Asynchronous Programming in Javascript : Jafar Husain (9:36)
*** databases
**** WATCHED Intro to Mongoose for Node.js & MongoDB : Mark Scott (1:41)
*** design
**** Pluralsight
***** Web Accessibility: Getting Started (1:30)
***** Making a Web Form Accessible (1:47)
***** Intro to Building Website Layouts : Susan Simkins (5:04)
***** Responsive In-Browser Design... : Karen Menezes (3:22)
*** goodShipJS
*** htmlcss
**** Pluralsight
***** DONE CSS Positioning : Susan Sumkins (0:50)
***** CSS3 : Michael Palermo (2:46)
***** Responsive Web Design : Ben Callahan (4:31)
***** CSS3 In-Depth : Estelle Weyl (6:10)
***** Modern Web Layout with Flexbox and CSS Grid : Brian Treese (1:14)
***** CSS Flexbox Fundamentals : Gary Simon (1:28)
***** Styling React Components : Jake Trent (1:29)
***** CSS Animation with Transition and Transform : Sandy Ludosky (2:10)
***** Creating Elegant Nav. Using CSS# Transitions : Susam Simkins (1:02)
***** A Better CSS: LESS and SASS : Shawn Wildermuth (1:56)
***** HTML5 Advanced Topics : Craig Shoemaker (2:45)
***** HTML5 Browser Caching : Ben Schwarz (1:01)
*** linux
**** pluralsight
***** WATCHED Docker and Containers: The Big Picture : Nigel Poulton (1:47)
***** Docker Deep Dive : Nigel Poulton (5:38)
***** Meet The Command Line : Dan Benjamin (1:53)
*** meetups
**** TODO Where did the emacs org docs go? and that css org doc?
*** node
**** Pluralsight
***** DONE Real-Time Web w/ Node.js : Kyle Simpson (5:23)
***** DONE RESTful Web Services with Node.js and Express (2:04)
***** DONE Build Web Apps with Node.js and Express 4.0 : Jonathan Mills (4:43)
***** DONE Securing Yours App w/ OAuth and Passport : Jonathan Mills
***** OPEN Intro to Node JS
***** Five Essential tools for REST APIs : Elton Stoneman (2:56)
***** HTTP Fundamentals : Scott Allen (2:50)
***** Node Application Patterns : Rob Conery (2:30)
***** FullStack NodeJS : Geoffrey Grosenbach (2:35)
***** Building Web Apps with Node.js : Kevin Whinnery (3:43)
**** FrontEndMasters
***** API Design with Node.js using Express : Scott Moss (10:18)
**** Udemy
***** OPEN Learn & Understand Node.js : Anthony Alicea (12:00+)
*** perf
**** Pluralsight
***** Web Performance : Robert Boedigheimer (2:51)
***** Using Google PageSpeed for Perf. : David Berry (3:19)
*** react
**** DONE React.js Program: Fundamentals : Tyler McGinnis ()
**** DONE Facebook Official React Tutorial
**** DONE React Router Tutorial
**** Pluralsight
***** Building iOS Apps with react Native : Hendrik Swanepoel (1:59)
***** Building Applications with React and Flux : Cory House (5:08)
***** Building Applications with React and Redux in ES6: Cory House (6:14)
***** React Native Apps with Exponent and Redux : Hendrick(3:21)
***** Building a Full-Stack App with React and Express : Daniel Stern (3:24)
**** Egghead
***** OPEN React Fundamentals : Joe Maddalon
***** Getting Started with Redux (egghead)
***** Getting Started with React Router (egghead)
***** Build Your First React.js App : Tyler McGinnise
***** React Native Fundamentals : Tyler McGinnis
**** Udemy
***** OPEN Modern React with Redux : Stephen Girder (?)
***** Advanced React and Redux : Stephen Girder (?)
***** Build Apps with React Native : Stephen Grider (8:00+)
***** Build Web Apps with ReactJS and Flux : Stephen Grider (9:30+)
*** testing
**** Pluralsight
***** Testing Client-Side JS : Joe Eames (4:50)
***** Code Testability : Misko Hevery (0:51)
***** Unit Testing with Node.js : Joe Eames (1:26)
***** Node.js Testing Strategies : Rob Conery (2:39)
***** Mastering React Testing with Jest : Daniel Stern (1:57)
*** tools
**** Pluralsight
***** DONE Intro to NPM as a Build Tool : Marcus Hammarberg (1:37)
***** DONE Git Fundamentals : James Kovacs (1:51)
***** WATCHED Meet Emacs : Phil Hagelberg (0:58)
***** Advanced Git : Ben Hoskings (1:00)
***** Using the Chrome Dev. Tools : John Sonmez (2:50)
***** Getting Started with Emmet : Kristian Freeman (0:55)
***** Babel: Get Started : Craig McKeachie (2:03)
***** NPM Playbook : Joe Eames (0:58)
** Projects
** Complete Mongo Certification


* App Ideas
** Soil Test
** Ship's Log (searchable note taker) 
*** dates
*** string parsing
*** relational db?
** SNAP
** Index Cards
*** datomic


* Horizon
** Scheme
*** Little Schemer / Seasoned Schemer
*** HtDP [5/43]
    I. Processing Simple Forms of Data
 - [X] Students, Teachers, Computers
 - [X] Numbers, Expressions, Simple Programs
 - [X] Programs are Function Plus Variable Definitions
 - [X] Conditional Expressions and Functions
 - [X] Symbolic Information
 - [ ] Compound Data, Part 1: Structures
 - [ ] The Varieties of Data
 - [ ] Intermezzo 1: Syntax and Semantics
 II. Processing Arbitrarily Large Data
 - [ ] Compound Data, Part 2: Lists
 - [ ] More on Processing Lists
 - [ ] Natural Numbers
 - [ ] Composing Functions, Revisited Again
 - [ ] Intermezzo 2: List Abbreviations
 III. More on Processing Arbitrarily Large Data
 - [ ] More Self-referential Data Definitions
 - [ ] Mutually Referential data Definitions
 - [ ] Development through Iterative Refinement
 - [ ] Processing Two Complex Pieces of Data
 - [ ] Intermezzo 3: Local Definitions and Lexical Scope
 IV. Abstracting Designs
 - [ ] Similarities in Definitions
 - [ ] Functions as Values
 - [ ] Designing Abstractions from Examples
 - [ ] Designing Abstractions with First-Class Functions
 - [ ] Mathematical Examples
 - [ ] Intermezzo 4: Defining Functions on the Fly
 V. Generative Recursion
 - [ ] A New Form of Recursion
 - [ ] Designing Algorithms
 - [ ] Variations on a Theme
 - [ ] Algorithms that Backtrack
 - [ ] Intermezzo 5: The Cost of Computing and Vectors
 VI. Accumulating Knowledge
 - [ ] The Loss of Knowledge
 - [ ] Designing Accumulator-Style Functions
 - [ ] More Uses of Accumulation
 - [ ] Intermezzo 6: The Nature of Inexact Numbers
 VII. Changing the State of Variables
 - [ ] Memory for Functions
 - [ ] Assignment to Variables
 - [ ] Designating Functions with Memory
 - [ ] Examples of Memory Usage
 - [ ] Intermezzo 7: The Final Syntax and Semantics
 VIII.
 - [ ] Encapsulation
 - [ ] Mutable Structures
 - [ ] Designing Functions that Change Structures
 - [ ] Equality
 - [ ] Changing Structures, Vectors, and Objects
 Epilogue

*** SICP
** Clojure
*** Living Clojure
*** Clojure for the Brave and True
*** Clojure Applied
** Secondary Languages
*** Java
*** Elm
*** Elixir
*** Rust
** MIT OpenCourseware
*** 6.01   - Intro to EE and CompSci
*** 18.01  - Single Variable Calculus
*** 6.042  - Mathematics for Computer Science
*** 6.006  - Intro to Algorithms
*** 18.02  - MultiVariable Calculus
*** 6.046  - Algorithms
*** 18.310 - Principles of Discrete Applied Math
    
