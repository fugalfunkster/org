#+TODO: VIEWONLY TODO NEXT OPEN | WATCHEDONLY DONE CANCELED

* Notes Readme Orientation

Welcome to my notes. Each document or directory in notes/  represents a video course,
blog post (or series of posts), book, tutorial, etc. for which I decided to take notes.

This readme is composed of five major headings, which manage different aspects of my
notes.

1. The TODO list is what I'm currently taking notes on.
2. The Queue is a staging area from the larger directory
3. The Directory lists all past, present and future notes.
4. App Ideas is pretty self explanatory
5. Horizons are the things I want to learn in the future,
   but can't plan into the queue or directory.

My notes are formatted as org docs, but I only use headings, tables, TODOs, and org-babel
source blocks extensively. For more information on org-mode see: http://orgmode.org/


* TODO list
** OPEN Web Accessibility: Getting Started (1:30)
** OPEN Responsive Web Images : Robert Boedigheimer (1:55)
** OPEN Learn CSS Layout: the Pendatic Way
** TODO How to Contribute to an Open Source Project on Github


* queue (next, open, view-only)
** TODO Making a Web Form Accessible (1:47)
** OPEN Webpack Fundamentals : Joe Eames (2:23) 
** TODO Using Webpack for Production JS Apps
** TODO Babel: Get Started : Craig McKeachie (2:03)
** TODO Advanced Git : Ben Hoskings (1:00)
** OPEN React Fundamentals : Joe Maddaloe
** OPEN Udemy : Modern React with Redux
** OPEN Learn & Understand Node.js : Anthony Alicea (12:00+)
** OPEN Intro to Node JS : Paul O'Fallon (2:48)


* directory
** Notes
*** Books
**** JavaScript Allonge : Review and Refactor Portfolio
*** CMS
**** Pluralsight
***** Intro to WordPress : Chris Reynolds (1:22)
***** Static Websites with Jekyll : Ryan Irelan (1:04)
***** Designing Custom Sites in WordPress : Jay Boucher (2:00)
*** D3
**** Pluralsight
***** Interactive Data Visualization with D3.js : Ian Johnson (5:30)
***** D3.js Data Visualization Fundamentals : Ben Sullins (4:35)
***** Geospatial mapping with D3 : Ben Sullins (2:39)
*** JS
**** Pluralsight
***** WATCHEDONLY Advanced Javascript : Kyle Simpson ()
***** WATCHEDONLY JS Objects and Prototypes
***** WATCHED JS Best Practices : Jonathan Mills (2:39)
***** WATCHED JS.Next: ES6 : Aaron Frost (5:24)
***** OPEN jQuery-free JS : Elijah Manor (2:26)
***** TODO JS Module Fundamentals : (2:16)
***** TODO Front-End First: Testing and Prototyping JS Apps : Mark Zamoyta (2:27)
***** TODO Reasoning About Async JS : Wes Higbee (2:05)
***** Hardcore Functional Programming in JavaScript : Brian Lonsdorf (6:03)
***** JavaScript Design Patterns : Aaron Powell (2:02)
***** JS Templating w/ Handlebars: Ryan Lewis (2:19)
***** WEbRTC FUndamentals : Lisa Larson-Kelly (1:40)
**** Egghead
***** Asynchronous Programming: The End of the Loop : Jafar Husain
***** Regex in JavaScript : Joe Maddalone
***** JavaScript Arrays in Depth : Shane Osbourne
***** Learn how to use Immutable JS : J.S. Leonard
**** Udemy
***** DONE JavaScript: Understanding The Weird Parts : Anthony Alicea
***** Hardcore Functional Programming in JavaScript : Brian Lonsdorf (6:00)
**** FrontEndMasters
***** Functional-Lite JS : Kyle Simpson (3:10)
***** Rethinking Async JS : Kyle Simpson (6:22)
***** Asynchronous Programming in Javascript : Jafar Husain (9:36)
*** databases
**** WATCHEDONLY Intro to Mongoose for Node.js & MongoDB : Mark Scott (1:41)
*** design
**** Pluralsight
***** DONE Responsive Typography : Jason Pamental (5:55)
***** OPEN Responsive Web Images : Robert Boedigheimer (1:55)
***** TODO Web Accessibility: Getting Started (1:30)
***** TODO Making a Web Form Accessible (1:47)
***** Intro to Building Website Layouts : Susan Simkins (5:04)
***** Responsive In-Browser Design... : Karen Menezes (3:22)
*** goodShipJS
*** htmlcss
**** OPEN pendaticLayout
**** Pluralsight
***** DONE CSS Positioning : Susan Sumkins (0:50)
***** TODO Responsive Web Design : Ben Callahan (4:31)
***** TODO CSS3 In-Depth : Estelle Weyl (6:10)
***** TODO Modern Web Layout with Flexbox and CSS Grid : Brian Treese (1:14)
***** TODO Styling React Components : Jake Trent (1:29)
***** CSS3 : Michael Palermo (2:46)
***** CSS Animation with Transition and Transform : Sandy Ludosky (2:10)
***** Creating Elegant Nav. Using CSS# Transitions : Susam Simkins (1:02)
***** A Better CSS: LESS and SASS : Shawn Wildermuth (1:56)
***** HTML5 Advanced Topics : Craig Shoemaker (2:45)
***** HTML5 Browser Caching : Ben Schwarz (1:01)
**** DONE egghead
***** DONE Flexbox Fundamentals
*** linux
**** pluralsight
***** WATCHEDONLY Docker and Containers: The Big Picture : Nigel Poulton (1:47)
***** Docker Deep Dive : Nigel Poulton (5:38)
***** Meet The Command Line : Dan Benjamin (1:53)
*** node
**** Pluralsight
***** DONE Real-Time Web w/ Node.js : Kyle Simpson (5:23)
***** DONE RESTful Web Services with Node.js and Express (2:04)
***** DONE Build Web Apps with Node.js and Express 4.0 : Jonathan Mills (4:43)
***** DONE Securing Yours App w/ OAuth and Passport : Jonathan Mills
***** OPEN Intro to Node JS : Paul O'Fallon (2:48)
***** TODO Five Essential tools for REST APIs : Elton Stoneman (2:56)
***** HTTP Fundamentals : Scott Allen (2:50)
***** Node Application Patterns : Rob Conery (2:30)
***** FullStack NodeJS : Geoffrey Grosenbach (2:35)
***** Building Web Apps with Node.js : Kevin Whinnery (3:43)
**** FrontEndMasters
***** API Design with Node.js using Express : Scott Moss (10:18)
**** Udemy
***** OPEN Learn & Understand Node.js : Anthony Alicea (12:00+)
*** perf
**** Pluralsight
***** Web Performance : Robert Boedigheimer (2:51)
***** Using Google PageSpeed for Perf. : David Berry (3:19)
*** react
**** DONE React.js Program: Fundamentals : Tyler McGinnis
**** DONE Facebook Official React Tutorial
**** DONE React Router Tutorial
**** Pluralsight
***** TODO Building Applications with React and Flux : Cory House (5:08)
***** TODO Building Applications with React and Redux in ES6: Cory House (6:14)
***** TODO Building a Full-Stack App with React and Express : Daniel Stern (3:24)
***** React Native Apps with Exponent and Redux : Hendrick(3:21)
***** Building iOS Apps with React Native : Hendrik Swanepoel (1:59)
**** Egghead
***** OPEN React Fundamentals : Joe Maddalon
***** TODO Getting Started with Redux (egghead)
***** TODO Getting Started with React Router (egghead)
***** TODO Building React Apps w/ Idiomatic Redux
***** React Testing Cookbook
***** Build Your First React.js App : Tyler McGinnise
***** React Native Fundamentals : Tyler McGinnis
**** Udemy
***** OPEN Modern React with Redux : Stephen Girder (?)
***** TODO Advanced React and Redux : Stephen Girder (?)
***** Build Apps with React Native : Stephen Grider (8:00+)
***** Build Web Apps with ReactJS and Flux : Stephen Grider (9:30+)
*** testing
**** Pluralsight
***** Testing Client-Side JS : Joe Eames (4:50)
***** Code Testability : Misko Hevery (0:51)
***** Unit Testing with Node.js : Joe Eames (1:26)
***** Node.js Testing Strategies : Rob Conery (2:39)
***** Mastering React Testing with Jest : Daniel Stern (1:57)
*** tools
**** emacsHelp
**** Pluralsight
***** DONE Intro to NPM as a Build Tool : Marcus Hammarberg (1:37)
***** DONE Git Fundamentals : James Kovacs (1:51)
***** DONE NPM Playbook : Joe Eames (0:58)
***** WATCHEDONLY Meet Emacs : Phil Hagelberg (0:58)
***** OPEN Webpack Fundamentals : Joe Eames (2:23)
***** TODO Advanced Git : Ben Hoskings (1:00)
***** TODO Babel: Get Started : Craig McKeachie (2:03)
***** Using the Chrome Dev. Tools : John Sonmez (2:50)
***** Getting Started with Emmet : Kristian Freeman (0:55)
**** egghead
***** TODO Using Webpack for Production JS Apps
***** TODO How to Contribute to an Open Source Project on Github


* App Ideas
** Soil Test
** Ship's Log (searchable note taker) 
** SNAP
** Index Cards


* Horizon
** Scheme
*** Little Schemer / Seasoned Schemer
*** HtDP [5/43]
    I. Processing Simple Forms of Data
 - [X] Students, Teachers, Computers
 - [X] Numbers, Expressions, Simple Programs
 - [X] Programs are Function Plus Variable Definitions
 - [X] Conditional Expressions and Functions
 - [X] Symbolic Information
 - [ ] Compound Data, Part 1: Structures
 - [ ] The Varieties of Data
 - [ ] Intermezzo 1: Syntax and Semantics
 II. Processing Arbitrarily Large Data
 - [ ] Compound Data, Part 2: Lists
 - [ ] More on Processing Lists
 - [ ] Natural Numbers
 - [ ] Composing Functions, Revisited Again
 - [ ] Intermezzo 2: List Abbreviations
 III. More on Processing Arbitrarily Large Data
 - [ ] More Self-referential Data Definitions
 - [ ] Mutually Referential data Definitions
 - [ ] Development through Iterative Refinement
 - [ ] Processing Two Complex Pieces of Data
 - [ ] Intermezzo 3: Local Definitions and Lexical Scope
 IV. Abstracting Designs
 - [ ] Similarities in Definitions
 - [ ] Functions as Values
 - [ ] Designing Abstractions from Examples
 - [ ] Designing Abstractions with First-Class Functions
 - [ ] Mathematical Examples
 - [ ] Intermezzo 4: Defining Functions on the Fly
 V. Generative Recursion
 - [ ] A New Form of Recursion
 - [ ] Designing Algorithms
 - [ ] Variations on a Theme
 - [ ] Algorithms that Backtrack
 - [ ] Intermezzo 5: The Cost of Computing and Vectors
 VI. Accumulating Knowledge
 - [ ] The Loss of Knowledge
 - [ ] Designing Accumulator-Style Functions
 - [ ] More Uses of Accumulation
 - [ ] Intermezzo 6: The Nature of Inexact Numbers
 VII. Changing the State of Variables
 - [ ] Memory for Functions
 - [ ] Assignment to Variables
 - [ ] Designating Functions with Memory
 - [ ] Examples of Memory Usage
 - [ ] Intermezzo 7: The Final Syntax and Semantics
 VIII.
 - [ ] Encapsulation
 - [ ] Mutable Structures
 - [ ] Designing Functions that Change Structures
 - [ ] Equality
 - [ ] Changing Structures, Vectors, and Objects
 Epilogue

*** SICP
** Clojure
*** Living Clojure
*** Clojure for the Brave and True
*** Clojure Applied
** Secondary Languages
*** Java
*** Elm
*** Elixir
*** Rust
** MIT OpenCourseware
*** 6.01   - Intro to EE and CompSci
*** 18.01  - Single Variable Calculus
*** 6.042  - Mathematics for Computer Science
*** 6.006  - Intro to Algorithms
*** 18.02  - MultiVariable Calculus
*** 6.046  - Algorithms
*** 18.310 - Principles of Discrete Applied Math
    
